---
export interface Props {
  title?: string;
}
const { title = "Contacto - Juan Amieva" } = Astro.props;
---

<section id="j75-contact" class="py-28">
  <div class="container max-w-7xl mx-auto px-4">
    <!-- Título y descripción -->
    <div class="text-center mb-20 animate-fade-in">
      <h2 class="text-[40px] font-inconsolata font-normal text-white mb-5">
        ¡Hablemos!
      </h2>
      <p class="text-lg text-white/80">
        ¿Tienes un proyecto sonoro o digital en mente? Estoy listo para
        colaborar contigo.
      </p>
    </div>

    <!-- Contenedor del formulario con max-width -->
    <div class="max-w-lg mx-auto animate-fade-in">
      <form action="/api/contact" method="POST" class="space-y-6">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="form-group">
            <label for="name" class="sr-only">Nombre</label>
            <input
              type="text"
              name="name"
              id="name"
              class="w-full h-12 px-4 text-lg font-inconsolata border-2 border-white/10 rounded-md focus:border-[#DD356E] focus:outline-none bg-transparent text-white placeholder-white/50"
              placeholder="Nombre"
              required
            />
          </div>
          <div class="form-group">
            <label for="email" class="sr-only">Email</label>
            <input
              type="email"
              name="email"
              id="email"
              class="w-full h-12 px-4 text-lg font-inconsolata border-2 border-white/10 rounded-md focus:border-[#DD356E] focus:outline-none bg-transparent text-white placeholder-white/50"
              placeholder="Email"
              required
            />
          </div>
        </div>
        <div class="form-group">
          <label for="message" class="sr-only">Mensaje</label>
          <textarea
            name="message"
            id="message"
            class="w-full h-40 px-4 py-2 text-lg font-inconsolata border-2 border-white/10 rounded-md focus:border-[#DD356E] focus:outline-none bg-transparent text-white placeholder-white/50"
            placeholder="Tu mensaje"
            maxlength="140"
            required></textarea>
          <p class="text-sm text-white/80 mt-2 text-right" id="char-count">
            0/140
          </p>
        </div>
        <div class="form-group flex justify-center">
          <button
            type="submit"
            class="bg-astro-accent-pink text-astro-primary-dark text-lg font-inconsolata py-4 px-12 rounded-full hover:bg-[#e14b7e] hover:shadow-lg transition duration-300"
          >
            Enviar mensaje
          </button>
        </div>
      </form>
    </div>
  </div>
</section>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  .animate-fade-in {
    animation: fade-in 1s ease-out forwards;
  }

  /* Ajustes para el formulario */
  form {
    width: 100%;
  }

  /* Asegurar que los campos del formulario sean responsivos */
  .form-group input,
  .form-group textarea {
    width: 100%;
    box-sizing: border-box;
  }

  /* Deshabilitar redimensionado del textarea */
  .form-group textarea {
    resize: none;
  }

  /* Centrar el botón en pantallas grandes */
  .form-group button {
    width: auto;
  }

  /* Media query para pantallas pequeñas */
  @media (max-width: 640px) {
    .form-group input,
    .form-group textarea {
      font-size: 0.875rem;
    }
    .form-group button {
      width: 100%;
      padding: 1rem 2rem;
    }
  }

  /* Ocultar etiquetas visualmente pero mantenerlas accesibles */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("form");
    const textarea = document.getElementById("message") as HTMLTextAreaElement;
    const charCount = document.getElementById("char-count");

    if (textarea && charCount) {
      textarea.addEventListener("input", () => {
        const currentLength = textarea.value.length;
        charCount.textContent = `${currentLength}/140`;
        if (currentLength > 120) {
          charCount.style.color = "#DD356E";
        } else {
          charCount.style.color = "rgba(255, 255, 255, 0.8)";
        }
      });
    }

    if (form) {
      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        // Tipar correctamente los elementos
        const nameInput = form.querySelector("#name") as HTMLInputElement;
        const emailInput = form.querySelector("#email") as HTMLInputElement;
        const messageTextarea = textarea; // Ya está tipado arriba como HTMLTextAreaElement

        // Obtener los valores
        const name = nameInput.value;
        const email = emailInput.value;
        const message = messageTextarea.value;

        // Validación básica
        if (!email.match(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/)) {
          alert("Por favor, ingresa un email válido.");
          return;
        }
        if (name.trim().length < 2) {
          alert("El nombre debe tener al menos 2 caracteres.");
          return;
        }
        if (message.trim().length < 5) {
          alert("El mensaje debe tener al menos 5 caracteres.");
          return;
        }

        try {
          const response = await fetch("/api/contact", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ name, email, message }),
          });

          const data = await response.json();
          if (response.ok) {
            alert("¡Mensaje enviado y guardado con éxito!");
            form.reset();
            if (charCount) charCount.textContent = "0/140";
          } else {
            alert(`Error: ${data.error}`);
          }
        } catch (error) {
          alert("Hubo un problema al enviar el mensaje.");
        }
      });
    }
  });
</script>
